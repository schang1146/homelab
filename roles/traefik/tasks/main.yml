- name: Install and setup Traefik
  when: traefik_enabled is true
  block:
    - name: Create Traefik Docker directory
      ansible.builtin.file:
        path: "{{ traefik_root }}"
        mode: "0755"
        state: directory
        group: "{{ server_group }}"
        owner: "{{ server_user }}"

    - name: Download the latest container image
      ansible.builtin.command: docker pull traefik:v3.4
      register: pull_result
      changed_when: "'Image is up to date' not in pull_result.stdout"

    - name: Create persistent storage for configuration data
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "0755"
        state: directory
        group: "{{ server_group }}"
        owner: "{{ server_user }}"
      with_items:
        - "{{ traefik_config_directory }}"
        - "{{ traefik_config_directory }}/secrets"

    - name: Create Traefik Docker compose file
      ansible.builtin.template:
        src: ../files/docker_compose_template.j2
        dest: "{{ traefik_root }}/docker-compose.yml"
        mode: "0644"
        group: "{{ server_group }}"
        owner: "{{ server_user }}"

    - name: Get Tailscale IP of machine
      ansible.builtin.command: tailscale ip
      register: tailscale_ip
      changed_when: false
      check_mode: false

    - name: Get Tailscale IPv4 of machine
      ansible.builtin.set_fact:
        tailscale_ipv4: "{{ tailscale_ip.stdout_lines[0] }}"

    # Needed because this issue exists in the version of Traefik currently used
    # https://github.com/traefik/traefik/issues/8753
    - name: Create Traefik custom config
      ansible.builtin.template:
        src: ../files/dynamic_conf_template.j2
        dest: "{{ traefik_config_directory }}/dynamic_conf.yml"
        mode: "0644"
        group: "{{ server_group }}"
        owner: "{{ server_user }}"

    - name: Deploy secrets
      ansible.builtin.copy:
        dest: "{{ traefik_config_directory }}/secrets/vercel_api_token"
        content: |
          VERCEL_API_TOKEN={{ vercel_api_token }}
        mode: "0644"
      # no_log: true

- name: Start or restart Traefik
  when: traefik_enabled is true
  block:
    - name: Start or restart Traefik Docker container
      ansible.builtin.command: docker compose up --detach
      args:
        chdir: "{{ traefik_root }}"
      register: start_traefik
      changed_when: start_traefik.rc == 0

- name: Stop Traefik
  when: traefik_enabled is false
  block:
    - name: Stop Traefik Docker container
      ansible.builtin.command: docker compose down
      args:
        chdir: "{{ traefik_root }}"
      register: stop_traefik
      changed_when: stop_traefik.rc == 0
