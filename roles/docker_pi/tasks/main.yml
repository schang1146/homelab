- name: Install Docker
  block:
    ### -------------------------------
    ### Install Docker Engine
    ### https://docs.docker.com/engine/install/
    ### -------------------------------
    - name: Make sure Docker's package dependencies are present
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
        state: present

    - name: Ensure /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        mode: '0755'
        state: directory

    - name: Get Linux distribution
      ansible.builtin.command: awk -F= '/^ID=/{print $2}' /etc/os-release
      register: linux_distro
      changed_when: false
      check_mode: false

    - name: Add Docker's official GPG key
      ansible.builtin.command: sudo curl -fsSL https://download.docker.com/linux/{{ linux_distro }}/gpg -o /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc

    - name: Update permissions on /etc/apt/keyrings/docker.asc
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.asc
        mode: '0644'
        state: file

    - name: Get dpkg architecture
      ansible.builtin.command: dpkg --print-architecture
      register: dpkg_arch
      changed_when: false
      check_mode: false

    - name: Add Docker repository to Apt sources
      ansible.builtin.apt_repository:
        repo: >
          deb [arch={{ dpkg_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc]
          https://download.docker.com/linux/{{ linux_distro }} {{ ansible_distribution_release }} stable
        filename: docker
        state: present

    - name: Install Docker Engine
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

- name: Setup Docker
  block:
    ### -------------------------------
    ### Misc.
    ### -------------------------------
    - name: Create Docker storage directory
      ansible.builtin.file:
        path: "{{ docker_root }}"
        mode: '0755'
        state: directory
        group: "{{ server_group }}"
        owner: "{{ server_user }}"
